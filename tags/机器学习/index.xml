<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>机器学习 on Heis</title><link>https://huangzhiyi.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link><description>Recent content in 机器学习 on Heis</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 09 May 2020 10:42:51 +0800</lastBuildDate><atom:link href="https://huangzhiyi.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>Spark 第七章 Spark 机器学习库实验手册</title><link>https://huangzhiyi.github.io/spark-exp07/</link><pubDate>Sat, 09 May 2020 10:42:51 +0800</pubDate><guid>https://huangzhiyi.github.io/spark-exp07/</guid><description>«返回课程汇总页面
【实验手册版本】 当前版本号v20200509
版本 修改说明 v20200509 初始化版本
实验前准备 确保虚拟机连上网络，安装 Python 依赖库 numpy sudo pip3 install numpy
实验7.1：基本概念-本地向量、转换器、评估器、参数 【实验名称】 实验7.1：基本概念-本地向量、转换器、评估器、参数 【实验目的】 理解本地向量、转换器、评估器、参数
【实验原理】 （1）本地向量：Mllib支持两种类型的本地向量:密集向量(dense)和稀疏向量(sparse)。密集向量只有一个浮点数组组成，而一个稀疏向量必须有索引和一个浮点向量组成。例如，(2.1,3.2,4.3)代表一个密集向量。(3，[1.1,2.3],[5.6,4.3,4.4])代表一个稀疏向量。
（2）Transformer：翻译成转换器，是一种可以将一个DataFrame转换为另一个DataFrame的算法。比如一个模型就是一个 Transformer。它可以把一个不包含预测标签的测试数据集 DataFrame 打上标签，转化成另一个包含预测标签的 DataFrame。 技术上，Transformer实现了一个方法transform()，它通过附加一个或多个列将一个DataFrame转换为另一个DataFrame
（3）Estimator：翻译成估计器或评估器，它是学习算法或在训练数据上的训练方法的概念抽象。在 Pipeline 里通常是被用来操作 DataFrame 数据并生成一个 Transformer。从技术上讲，Estimator实现了一个方法fit()，它接受一个DataFrame并产生一个转换器。比如，一个随机森林算法就是一个 Estimator，它可以调用fit()，通过训练特征数据而得到一个随机森林模型。
（4）Parameter：所有Transformers和Estimators现在共享一个用于指定参数的通用API
【实验环境】 操作系统：Ubuntu 16.04 Spark：Spark2.x 开发环境：PyCharm或pyspark交互命令 【实验资源】 实验数据下载</description></item></channel></rss>