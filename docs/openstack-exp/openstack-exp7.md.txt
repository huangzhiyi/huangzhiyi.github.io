+++
Description = "安装 Dashboard(Horizon)"
Tags = ["openstack","部署"]
Categories = ["openstack"]
date = "2021-03-06T16:42:51+08:00"
draft = false
title = "Part 7 - 安装 Dashboard(Horizon)"
toc = true
authors = "heis"
weight = 700
+++


## 【版本】

当前版本号`v20220208`
<div class="tbl-start"></div>

|版本|修改说明|
|-|-|
|v20220208|修正相关步骤|
|v20210310|修改步骤14，提醒注意}符号的结束位置|
|v20210309|修改步骤19，去掉重启memcached命令|
|v20210304|初始化版本|

<div class="tbl-end" style="height:10px"></div>

## 【实验名称】

云计算部署实战 Part 7 - 安装 Dashboard(Horizon)

## 【实验目的】

- 掌握搭建 Openstack Dashboard(Horizon) 组件

## 【实验环境】
- 内存：至少4G
- 硬盘：至少空余40G
- 操作系统: 64位 Windows系统。

## 【实验资源】
- FinalShell
- CentOS 7 系统镜像
- VirtualBox
- Openstack 源

## 【实验步骤】
1. 使用 root 用户登录控制节点（Controller）。输出 Hostname ，确认所在节点是计算节点。
```
hostname
```
结果:
```
controller+你的学号后4位
```

<div class="warning">注意以下步骤在控制节点（Controller）上执行！</div>

### 安装 Dashboard

2. 安装 Dashboard。
```
yum install -y openstack-dashboard
```

### 备份和编辑 Dashboard 配置文件 local_settings

3. 备份Dashboard 配置文件，并进行编辑。
```
cp /etc/openstack-dashboard/local_settings /etc/openstack-dashboard/local_settings.bak
vim /etc/openstack-dashboard/local_settings
```

4. 按下`esc`键，进入 Vim 的命令模式。

5. 启用 Vim 的显示行数。
```
:set nu
```

6. 在`local_settings` 配置文件中找到`OPENSTACK_HOST`(约在158行)，配置 Openstack 控制节点 主机名，注意替换为你的学号。
```
OPENSTACK_HOST = "controller+你的学号后4位"
```

7. 在`local_settings` 配置文件中找到`ALLOWED_HOSTS`(约在30行)，配置为允许所有主机访问 Dashboard。
```
ALLOWED_HOSTS = ['*', ]
```

8. 在`local_settings` 配置文件中找到`CACHES`（约在135行），配置 memcached 会话存储服务。注意替换为你的学号。
```
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

CACHES = {
  'default': {
     'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
     'LOCATION': 'controller+你的学号后3位:11211',
  }
}
```

9. 在`local_settings` 配置文件中找到`OPENSTACK_KEYSTONE_URL`（约在159行），启用第3版认证API。
```
OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST
```

10. 在`local_settings` 配置文件中找到`OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT`（约在64行），去掉注释的#号，并启用对域的支持。
```
OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True
```

11. 在`local_settings` 配置文件中找到`OPENSTACK_API_VERSIONS`（约在55行），配置API版本，去掉注释的#号。
```
OPENSTACK_API_VERSIONS = {
     "data-processing": 1.1,
     "identity": 3,
     "image":2,
     "volume": 2,
     "compute": 2,
 }
```

12. 在`local_settings`配置文件中找到`OPENSTACK_KEYSTONE_DEFAULT_DOMAIN`（约在72行），通过仪表盘创建用户时的默认域配置为 default。
```
OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = 'default'
```

13. 在`local_settings`配置文件中找到`OPENSTACK_KEYSTONE_DEFAULT_ROLE`（约在160行），通过仪表盘创建的用户默认角色配置为 user。
```
OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"
```

14. 在`local_settings` 配置文件中找到`OPENSTACK_NEUTRON_NETWORK`（约在260行），禁用支持3层网络服务。注意代码中的...表示省略了部分不需要代码。此段代码需要注意`{}`符号的结束位置。
```
OPENSTACK_NEUTRON_NETWORK = {
    'enable_router': False,
    'enable_quotas': False,
    'enable_ipv6': True,
    'enable_distributed_router': False,
    'enable_ha_router': False,
    'enable_lb': False,
    'enable_firewall': False,
    'enable_vpn': False,
    'enable_fip_topology_check': False,
	#以下部分不需要修改，所以省略
```

15. 在 `local_settings` 配置文件中找到`TIME_ZONE`，修改时区为重庆时间。
```
TIME_ZONE = "Asia/Chongqing"
```

16. 保存`local_settings`配置文件。

### 编辑 Apache 的配置文件

17. 编辑 Apache 的配置文件。
```
vim /etc/httpd/conf.d/openstack-dashboard.conf
```

18. 配置文件第1行加入以下代码。
```
WSGIApplicationGroup %{GLOBAL}
```

19. 重启 Apache。
```
systemctl enable httpd.service
systemctl restart httpd.service
```

### 控制节点验证

20. 打开宿主机浏览器，访问 http://10.0.0.11/dashboard。第一次访问加载时间会比较长。
![](/static/img/openstack-exp07/Snipaste_2021-03-04_18-03-20.png)

21. 使用在 Part3 创建的 admin 账户登录。
>域（Domain）：default
>用户名：admin
>密码：ADMIN_PASS

22. 查看系统信息，各项服务是否启用
![](/static/img/openstack-exp07/Snipaste_2022-02-08_17-40-50.png)
![](/static/img/openstack-exp07/Snipaste_2022-02-08_17-42-55.png)
![](/static/img/openstack-exp07/Snipaste_2022-02-08_17-43-17.png)

## 【思考和探索】
